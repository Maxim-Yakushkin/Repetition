Mind Map generated by NB MindMap plugin   
> __version__=`1.1`,showJumps=`true`
---

# Stack and Heap theory для класса Computer
> collapsed=`true`

- FILE
<pre>src/com/yakushkin/repetition/lesson5_1_Access_Modifier/Computer.java</pre>

## Stack
- NOTE
<pre>Stack - области памяти под каждый отдельный поток

Пример:
10 пользователей на сайте магазина делают одновременно заказ. Под каждый заказ (поток)
выделяется память из Heap.

Рботает по принципу First IN - Last OUT. (Как стопка тарелок)

ВСЕ! переменные ПРИМИТИВНОГО типа находятся в СТЭКОВОЙ области памяти!</pre>

### 1 поток \(часть памяти из Heap\)
> fillColor=`#00FF92`


#### int ramValue = 1000
> fillColor=`#FFEF00`


### 2 поток \(часть памяти из Heap\)
> fillColor=`#005BFF`


#### Ram ram;
> fillColor=`#FF4700`


##### ram \- ссылка на объект в Heap
> fillColor=`#FF4700`


### 3 поток \(часть памяти из Heap\)
> fillColor=`#A400FF`


#### Ssd ssd;
> fillColor=`#FF4700`


##### ssd \- ссылка на объект в Heap
> fillColor=`#FF4700`


### \.\.\. поток \(часть памяти из Heap\)
> fillColor=`#FF71CC`


#### Computer computer;
> fillColor=`#FF1D00`


##### computer \- ссылка на объект в Heap
> fillColor=`#FF1D00`


## Heap
> leftSide=`true`

- NOTE
<pre>Heap - это область памяти, одна для всех наших ПОТОКОВ.

Хип распределяется для областей памяти стэка

Если ссылка из Stack на объект в Heap удаляется, то объект в Heap удаляется 
СБОРЩИКОМ МУСОРА и память освобождается

</pre>

### Одна большая область памяти

#### = new Ram\(value\)
> fillColor=`#FF4700`


#### = new Ssd\(500\)
> fillColor=`#FF4700`


#### = new Computer\(ram, ssd\)
> fillColor=`#FF1D00`


##### = new Ram\(value\)
> fillColor=`#FF4700`


##### = new Ssd\(500\)
> fillColor=`#FF4700`


#### 1000 = 4байт
> fillColor=`#FFEF00`

